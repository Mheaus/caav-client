{"version":3,"sources":["assets/logo-large.png","components/Header.js","components/Nav.js","components/NewsFeed.js","components/Posts.js","apolloClient.js","theme/theme.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Layout","styled","header","_templateObject","Logo","img","_templateObject2","Form","form","_templateObject3","Input","input","_templateObject4","ButtonSubmit","button","_templateObject5","Auth","div","_templateObject6","_ref","theme","colors","font","_ref2","fontSecondary","Header","react_default","a","createElement","src","logo","alt","onSubmit","e","preventDefault","type","placeholder","onClick","console","log","nav","Nav_templateObject","ListItem","li","Nav_templateObject2","primary","items","Nav","_ref3","onItemClick","_useState","useState","_useState2","Object","slicedToArray","selectedItem","setSelectedItem","handleListItemClick","index","Nav_Layout","map","item","className","key","trim","toLowerCase","onKeyDown","role","defaultProps","section","NewsFeed_templateObject","Title","h5","NewsFeed_templateObject2","NewsFeed_templateObject3","News","NewsFeed_templateObject4","shadows","news","NewsFeed","NewsFeed_Layout","NewsFeed_ListItem","Math","random","Posts_templateObject","Posts","setPosts","useEffect","title","Posts_Layout","react_apollo_esm","query","gql","Posts_templateObject2","loading","error","data","posts","id","client","ApolloClient","uri","process","background","1pt","2pt","3pt","4pt","6pt","8pt","9pt","12pt","16pt","24pt","ApplicationLayout","App_templateObject","Main","main","App_templateObject2","App","styled_components_browser_esm","components_Header","components_Nav","components_Posts","components_NewsFeed","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8215ae58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-large.a7fca677.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../assets/logo-large.png';\n\nconst Layout = styled.header`\n  align-items: center;\n  display: flex;\n  margin-bottom: 1rem;\n`;\n\nconst Logo = styled.img`\n  height: 3rem;\n  width: 13rem;\n`;\n\nconst Form = styled.form`\n  background: #fff;\n  border: 0.0625rem solid #979797;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 3rem;\n  padding: 0.75rem;\n  position: relative;\n  width: calc(70% - 13rem - 7.625rem);\n\n  &::before {\n    background: linear-gradient(\n      to bottom right,\n      #fafdff 50%,\n      #979797 50%,\n      #fff 55%\n    );\n    content: '';\n    display: block;\n    height: 1rem;\n    left: -0.0625rem;\n    position: absolute;\n    top: -0.0625rem;\n    width: 1rem;\n  }\n`;\n\nconst Input = styled.input`\n  background: none;\n  border: none;\n  border-bottom: 0.0625rem solid #d8d8d8;\n  font-size: 1rem;\n  margin: auto 0;\n  height: 100%;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    opacity: 0.5;\n  }\n`;\n\nconst ButtonSubmit = styled.button`\n  background: none;\n  border: none;\n  font-weight: 500;\n  font-size: 0.875rem;\n  margin: auto 0 auto 0.5rem;\n`;\n\nconst Auth = styled.div`\n  text-align: right;\n  width: 30%;\n\n  & > * {\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  button {\n    color: ${({ theme }) => theme.colors.font};\n  }\n\n  span {\n    color: ${({ theme }) => theme.colors.fontSecondary};\n    opacity: 0.5;\n    margin: 0 0.25rem;\n  }\n`;\n\nfunction Header() {\n  return (\n    <Layout>\n      <Logo src={logo} alt=\"logo\" />\n      <Form onSubmit={e => e.preventDefault()}>\n        <Input type=\"text\" placeholder=\"Rechercher une annonce\" />\n        <ButtonSubmit type=\"submit\">RECHERCHER</ButtonSubmit>\n      </Form>\n      <Auth>\n        <button type=\"button\" onClick={console.log}>\n          CONNECTION\n        </button>\n        <span> OU </span>\n        <button type=\"button\" onClick={console.log}>\n          CRÉER UN COMPTE\n        </button>\n      </Auth>\n    </Layout>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Layout = styled.nav`\n  width: 16rem;\n`;\n\nconst ListItem = styled.li`\n  color: ${({ theme }) => theme.colors.font};\n  cursor: pointer;\n  font-size: 0.875rem;\n  font-weight: 700;\n  margin: 2rem 0;\n  transition: all 0.25s;\n\n  &.selected {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst items = ['DERNIERES ANNONCES', 'PROCHE DE VOUS', 'PAR DEPARTEMENTS'];\n\nfunction Nav({ onItemClick }) {\n  const [selectedItem, setSelectedItem] = useState(items[0]);\n\n  function handleListItemClick(index) {\n    setSelectedItem(items[index]);\n    onItemClick(items[index]);\n  }\n\n  return (\n    <Layout>\n      <ul>\n        {items.map((item, index) => (\n          <ListItem\n            className={selectedItem === item ? 'selected' : ''}\n            key={item.trim().toLowerCase()}\n            onClick={() => handleListItemClick(index)}\n            onKeyDown={() => handleListItemClick(index)}\n            role=\"menuitem\"\n          >\n            {item}\n          </ListItem>\n        ))}\n      </ul>\n    </Layout>\n  );\n}\n\nNav.defaultProps = {\n  onItemClick: console.log,\n};\n\nNav.propTypes = {\n  onItemClick: PropTypes.func,\n};\n\nexport default Nav;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Layout = styled.section`\n  width: 30%;\n`;\n\nconst Title = styled.h5`\n  color: ${({ theme }) => theme.colors.fontSecondary};\n  font-weight: 500;\n`;\n\nconst ListItem = styled.li`\n  margin: 1rem 0;\n  width: 100%;\n`;\n\nconst News = styled.div`\n  background: #fff;\n  ${({ theme }) => theme.shadows['2pt']};\n  height: 8rem;\n  position: relative;\n  width: 100%;\n`;\n\nconst news = [{}, {}, {}, {}];\n\nfunction NewsFeed() {\n  return (\n    <Layout>\n      <Title>À la une :</Title>\n      <ul>\n        {news.map(() => (\n          <ListItem key={Math.random()}>\n            <News />\n          </ListItem>\n        ))}\n      </ul>\n    </Layout>\n  );\n}\n\nexport default NewsFeed;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nconst Layout = styled.section`\n  width: calc(70% - 16rem);\n`;\n\nfunction Posts() {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => setPosts([{ title: 'foo' }]), []);\n\n  return (\n    <Layout>\n      <Query\n        query={gql`\n          {\n            posts {\n              id\n              title\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error :(</p>;\n\n          return data.posts.map(({ id, title }, index) => (\n            <div key={id}>{title}</div>\n          ));\n        }}\n      </Query>\n    </Layout>\n  );\n}\n\nexport default Posts;\n","import ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_API_URL,\n});\n\nexport default client;\n","const colors = {\n  background: '#FAFDFF',\n  font: '#424242',\n  fontSecondary: '#949FB7',\n  primary: '#458FD6',\n};\n\nconst shadows = {\n  '1pt': `box-shadow:\n      0 1px 3px 0 rgba(0, 0, 0, 0.2),\n      0 2px 1px -1px rgba(0, 0, 0, 0.12),\n      0 1px 1px 0 rgba(0, 0, 0, 0.14);`,\n  '2pt': `box-shadow:\n      0 1px 5px 0 rgba(0, 0, 0, 0.2),\n      0 3px 1px -2px rgba(0, 0, 0, 0.12),\n      0 2px 2px 0 rgba(0, 0, 0, 0.14);`,\n  '3pt': `box-shadow:\n      0 1px 8px 0 rgba(0, 0, 0, 0.2),\n      0 3px 3px -2px rgba(0, 0, 0, 0.12),\n      0 3px 4px 0 rgba(0, 0, 0, 0.14);`,\n  '4pt': `box-shadow:\n      0 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0 1px 10px 0 rgba(0, 0, 0, 0.12),\n      0 4px 5px 0 rgba(0, 0, 0, 0.14);`,\n  '6pt': `box-shadow:\n      0 3px 5px -1px rgba(0, 0, 0, 0.2),\n      0 1px 18px 0 rgba(0, 0, 0, 0.12),\n      0 6px 10px 0 rgba(0, 0, 0, 0.14);`,\n  '8pt': `box-shadow:\n      0 5px 5px -3px rgba(0, 0, 0, 0.2),\n      0 3px 14px 2px rgba(0, 0, 0, 0.12),\n      0 8px 10px 1px rgba(0, 0, 0, 0.14);`,\n  '9pt': `box-shadow:\n      0 5px 6px -3px rgba(0, 0, 0, 0.2),\n      0 3px 16px 2px rgba(0, 0, 0, 0.12),\n      0 9px 12px 1px rgba(0, 0, 0, 0.14);\n      0 8px 10px 1px rgba(0, 0, 0, 0.14);`,\n  '12pt': `box-shadow:\n      0 7px 8px -4px rgba(0, 0, 0, 0.2),\n      0 5px 22px 4px rgba(0, 0, 0, 0.12),\n      0 12px 17px 2px rgba(0, 0, 0, 0.14);`,\n  '16pt': `box-shadow:\n      0 8px 10px -5px rgba(0, 0, 0, 0.2),\n      0 6px 30px 5px rgba(0, 0, 0, 0.12),\n      0 16px 24px 2px rgba(0, 0, 0, 0.14);`,\n  '24pt': `box-shadow:\n      0 11px 15px -7px rgba(0, 0, 0, 0.2),\n      0 9px 46px 8px rgba(0, 0, 0, 0.12),\n      0 24px 38px 3px rgba(0, 0, 0, 0.14);`,\n};\n\nexport default {\n  colors,\n  shadows,\n};\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { ApolloProvider } from 'react-apollo';\n\nimport { Header, Nav, NewsFeed, Posts } from '../components';\nimport client from '../apolloClient';\nimport theme from '../theme';\n\nconst ApplicationLayout = styled.div`\n  background-color: ${({ theme: { colors } }) => colors.background};\n  height: calc(100% - 4rem);\n  padding: 2rem;\n`;\n\nconst Main = styled.main`\n  display: flex;\n  justify-content: space-between;\n`;\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <ApplicationLayout>\n          <Header />\n          <Main>\n            <Nav />\n            <Posts />\n            <NewsFeed />\n          </Main>\n        </ApplicationLayout>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-rubik';\nimport './css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}